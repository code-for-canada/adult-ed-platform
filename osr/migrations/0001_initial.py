# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-25 15:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Eligibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='text')),
                ('text_en', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=200, null=True, verbose_name='text')),
            ],
            options={
                'verbose_name': 'eligibility',
                'verbose_name_plural': 'eligibilities',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=60, verbose_name='text')),
                ('text_en', models.CharField(max_length=60, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=60, null=True, verbose_name='text')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'', verbose_name='image')),
            ],
            options={
                'verbose_name': 'facility',
                'verbose_name_plural': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=60, verbose_name='text')),
                ('text_en', models.CharField(max_length=60, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=60, null=True, verbose_name='text')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'', verbose_name='image')),
            ],
            options={
                'verbose_name': 'feature',
                'verbose_name_plural': 'features',
            },
        ),
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('str_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('class_size', models.CharField(choices=[(b'1 - 10', b'1 - 10'), (b'11 - 20', b'11 - 20'), (b'20+', b'20+')], max_length=10, verbose_name='class size')),
                ('learning_style', models.CharField(choices=[(b'Online', 'Online'), (b'In-person', 'In-person'), (b'Blended', 'Blended')], max_length=10, verbose_name='learning style')),
                ('clb_01', models.BooleanField(default=False, verbose_name='CLB level 1')),
                ('clb_02', models.BooleanField(default=False, verbose_name='CLB level 2')),
                ('clb_03', models.BooleanField(default=False, verbose_name='CLB level 3')),
                ('clb_04', models.BooleanField(default=False, verbose_name='CLB level 4')),
                ('clb_05', models.BooleanField(default=False, verbose_name='CLB level 5')),
                ('clb_06', models.BooleanField(default=False, verbose_name='CLB level 6')),
                ('clb_07', models.BooleanField(default=False, verbose_name='CLB level 7')),
                ('clb_08', models.BooleanField(default=False, verbose_name='CLB level 8')),
                ('clb_09', models.BooleanField(default=False, verbose_name='CLB level 9')),
                ('clb_10', models.BooleanField(default=False, verbose_name='CLB level 10')),
                ('clb_11', models.BooleanField(default=False, verbose_name='CLB level 11')),
                ('clb_12', models.BooleanField(default=False, verbose_name='CLB level 12')),
            ],
            options={
                'verbose_name': 'offering',
                'verbose_name_plural': 'offerings',
            },
        ),
        migrations.CreateModel(
            name='OfferingFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Feature', verbose_name='feature')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Offering')),
            ],
            options={
                'verbose_name': 'feature',
                'verbose_name_plural': 'features',
            },
        ),
        migrations.CreateModel(
            name='OfferingProfession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Offering')),
            ],
            options={
                'verbose_name': 'profession',
                'verbose_name_plural': 'professions',
            },
        ),
        migrations.CreateModel(
            name='OfferingSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_the_week', models.CharField(choices=[(b'Monday', 'Monday'), (b'Tuesday', 'Tuesday'), (b'Wednesday', 'Wednesday'), (b'Thursday', 'Thursday'), (b'Friday', 'Friday'), (b'Saturday', 'Saturday'), (b'Sunday', 'Sunday')], max_length=10, verbose_name='day of the week')),
                ('str_time', models.TimeField(verbose_name='start time')),
                ('end_time', models.TimeField(verbose_name='end time')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Offering')),
            ],
            options={
                'verbose_name': 'schedule',
                'verbose_name_plural': 'schedules',
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='text')),
                ('text_en', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('background_colour', models.CharField(default=b'#FFFFFF', max_length=50, verbose_name='background colour')),
                ('foreground_colour', models.CharField(default=b'#000000', max_length=50, verbose_name='foreground colour')),
            ],
            options={
                'verbose_name': 'outcome',
                'verbose_name_plural': 'outcomes',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=60, verbose_name='text')),
                ('text_en', models.CharField(max_length=60, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=60, null=True, verbose_name='text')),
            ],
            options={
                'verbose_name': 'profession',
                'verbose_name_plural': 'professions',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_official', models.CharField(help_text='official name of the program', max_length=50, verbose_name='official name')),
                ('name_official_en', models.CharField(help_text='official name of the program', max_length=50, null=True, verbose_name='official name')),
                ('name_official_fr', models.CharField(help_text='official name of the program', max_length=50, null=True, verbose_name='official name')),
                ('name_branding', models.CharField(help_text='branding name of the program', max_length=50, verbose_name='branding name')),
                ('name_branding_en', models.CharField(help_text='branding name of the program', max_length=50, null=True, verbose_name='branding name')),
                ('name_branding_fr', models.CharField(help_text='branding name of the program', max_length=50, null=True, verbose_name='branding name')),
                ('code', models.CharField(default=b'PRO', max_length=3, verbose_name='code')),
                ('description', models.TextField(blank=True, default=b'', max_length=200, verbose_name='description')),
                ('description_en', models.TextField(blank=True, default=b'', max_length=200, null=True, verbose_name='description')),
                ('description_fr', models.TextField(blank=True, default=b'', max_length=200, null=True, verbose_name='description')),
                ('details', models.TextField(blank=True, default=b'', max_length=200, verbose_name='details')),
                ('details_en', models.TextField(blank=True, default=b'', max_length=200, null=True, verbose_name='details')),
                ('details_fr', models.TextField(blank=True, default=b'', max_length=200, null=True, verbose_name='details')),
                ('length', models.TextField(blank=True, default=b'', max_length=100, verbose_name='length of the program')),
                ('length_en', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='length of the program')),
                ('length_fr', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='length of the program')),
                ('subsidies', models.TextField(blank=True, default=b'', max_length=100, verbose_name='subsidies')),
                ('subsidies_en', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='subsidies')),
                ('subsidies_fr', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='subsidies')),
                ('support', models.TextField(blank=True, default=b'', max_length=100, verbose_name='support')),
                ('support_en', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='support')),
                ('support_fr', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='support')),
                ('funding', models.TextField(blank=True, default=b'', max_length=100, verbose_name='funding')),
                ('funding_en', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='funding')),
                ('funding_fr', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='funding')),
                ('fees', models.TextField(blank=True, default=b'', max_length=100, verbose_name='fees')),
                ('fees_en', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='fees')),
                ('fees_fr', models.TextField(blank=True, default=b'', max_length=100, null=True, verbose_name='fees')),
                ('img_src', models.ImageField(blank=True, null=True, upload_to=b'')),
                ('img_txt', models.CharField(blank=True, default=b'', max_length=100)),
                ('marker', models.CharField(choices=[(b'blu_circle', 'Blue circle'), (b'ltblu_circle', 'Light blue circle'), (b'ylw_circle', 'Yellow circle'), (b'red_circle', 'Red circle'), (b'orange_circle', 'Orange circle'), (b'grn_circle', 'Green circle'), (b'purple_circle', 'Purple circle'), (b'pink_circle', 'Pink circle'), (b'wht_circle', 'White circle')], default=b'grn_circle', max_length=15, verbose_name='marker')),
                ('background_colour', models.CharField(default=b'#FFFFFF', max_length=50, verbose_name='background colour')),
                ('foreground_colour', models.CharField(default=b'#000000', max_length=50, verbose_name='foreground colour')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': 'program',
                'verbose_name_plural': 'programs',
            },
        ),
        migrations.CreateModel(
            name='ProgramBestForScenarios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=150, verbose_name='text')),
                ('text_en', models.CharField(max_length=150, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=150, null=True, verbose_name='text')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Program', verbose_name='program')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'best for scenario',
                'verbose_name_plural': 'best for scenarios',
            },
        ),
        migrations.CreateModel(
            name='ProgramRegistrationSteps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=150, verbose_name='text')),
                ('text_en', models.CharField(max_length=150, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=150, null=True, verbose_name='text')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Program', verbose_name='program')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'registration step',
                'verbose_name_plural': 'registration steps',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='code')),
                ('reason', models.CharField(max_length=100, verbose_name='reason')),
                ('reason_en', models.CharField(max_length=100, null=True, verbose_name='reason')),
                ('reason_fr', models.CharField(max_length=100, null=True, verbose_name='reason')),
                ('text', models.CharField(max_length=100, verbose_name='text')),
                ('text_en', models.CharField(max_length=100, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=100, null=True, verbose_name='text')),
                ('link', models.CharField(max_length=50, verbose_name='link')),
            ],
            options={
                'verbose_name': 'recommendation',
                'verbose_name_plural': 'recommendations',
            },
        ),
        migrations.CreateModel(
            name='ServiceDeliverySite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='name')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='e-mail')),
                ('address_street', models.CharField(blank=True, max_length=50, verbose_name='street')),
                ('address_city', models.CharField(blank=True, max_length=30, verbose_name='city')),
                ('address_province', models.CharField(blank=True, max_length=30, verbose_name='province')),
                ('address_zipcode', models.CharField(blank=True, max_length=30, verbose_name='zip code')),
                ('gps_lat', models.FloatField(blank=True, null=True)),
                ('gps_lon', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'service delivery site',
                'verbose_name_plural': 'service delivery sites',
            },
        ),
        migrations.CreateModel(
            name='ServiceDeliverySiteFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Facility', verbose_name='facility')),
                ('service_delivery_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.ServiceDeliverySite', verbose_name='service delivery site')),
            ],
            options={
                'verbose_name': 'facility',
                'verbose_name_plural': 'facilities',
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=b'', verbose_name='logo')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='phone number')),
                ('email', models.EmailField(blank=True, max_length=50, verbose_name='e-mail')),
                ('address_street', models.CharField(blank=True, max_length=50, verbose_name='street')),
                ('address_city', models.CharField(blank=True, max_length=30, verbose_name='city')),
                ('address_province', models.CharField(blank=True, max_length=30, verbose_name='province')),
                ('address_zipcode', models.CharField(blank=True, max_length=30, verbose_name='zip code')),
                ('programs', models.ManyToManyField(to='osr.Program')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': 'service provider',
                'verbose_name_plural': 'service providers',
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='text')),
                ('text_en', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('programs', models.ManyToManyField(to='osr.Program', verbose_name='programs')),
            ],
            options={
                'verbose_name': 'stream',
                'verbose_name_plural': 'streams',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='text')),
                ('text_en', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('text_fr', models.CharField(max_length=200, null=True, verbose_name='text')),
                ('code', models.CharField(blank=True, max_length=12, verbose_name='code')),
                ('programs', models.ManyToManyField(to='osr.Program', verbose_name='programs')),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
            },
        ),
        migrations.AddField(
            model_name='servicedeliverysite',
            name='head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.ServiceProvider', verbose_name='head'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='programs',
            field=models.ManyToManyField(to='osr.Program', verbose_name='programs'),
        ),
        migrations.AddField(
            model_name='offeringprofession',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Profession', verbose_name='profession'),
        ),
        migrations.AddField(
            model_name='offering',
            name='outcomes',
            field=smart_selects.db_fields.ChainedManyToManyField(chained_field=b'program', chained_model_field=b'programs', to='osr.Outcome', verbose_name='outcomes'),
        ),
        migrations.AddField(
            model_name='offering',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.Program', verbose_name='program'),
        ),
        migrations.AddField(
            model_name='offering',
            name='requirements',
            field=smart_selects.db_fields.ChainedManyToManyField(chained_field=b'program', chained_model_field=b'programs', to='osr.Eligibility', verbose_name='requirements'),
        ),
        migrations.AddField(
            model_name='offering',
            name='service_delivery_site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osr.ServiceDeliverySite', verbose_name='service delivery site'),
        ),
        migrations.AddField(
            model_name='offering',
            name='streams',
            field=smart_selects.db_fields.ChainedManyToManyField(chained_field=b'program', chained_model_field=b'programs', to='osr.Stream', verbose_name='stream'),
        ),
        migrations.AddField(
            model_name='offering',
            name='subjects',
            field=smart_selects.db_fields.ChainedManyToManyField(chained_field=b'program', chained_model_field=b'programs', to='osr.Subject', verbose_name='subjects'),
        ),
        migrations.AddField(
            model_name='eligibility',
            name='programs',
            field=models.ManyToManyField(to='osr.Program', verbose_name='programs'),
        ),
    ]
